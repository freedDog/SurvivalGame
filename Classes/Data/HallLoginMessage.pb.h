// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HallLoginMessage.proto

#ifndef PROTOBUF_INCLUDED_HallLoginMessage_2eproto
#define PROTOBUF_INCLUDED_HallLoginMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/stubs/common.h>
#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_HallLoginMessage_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_HallLoginMessage_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_HallLoginMessage_2eproto();
namespace GameMessage {
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class LoginSubGameRequest;
class LoginSubGameRequestDefaultTypeInternal;
extern LoginSubGameRequestDefaultTypeInternal _LoginSubGameRequest_default_instance_;
class LoginSubGameResponse;
class LoginSubGameResponseDefaultTypeInternal;
extern LoginSubGameResponseDefaultTypeInternal _LoginSubGameResponse_default_instance_;
class QuitRequest;
class QuitRequestDefaultTypeInternal;
extern QuitRequestDefaultTypeInternal _QuitRequest_default_instance_;
class QuitResponse;
class QuitResponseDefaultTypeInternal;
extern QuitResponseDefaultTypeInternal _QuitResponse_default_instance_;
class QuitSubGameRequest;
class QuitSubGameRequestDefaultTypeInternal;
extern QuitSubGameRequestDefaultTypeInternal _QuitSubGameRequest_default_instance_;
class QuitSubGameResponse;
class QuitSubGameResponseDefaultTypeInternal;
extern QuitSubGameResponseDefaultTypeInternal _QuitSubGameResponse_default_instance_;
}  // namespace GameMessage
namespace google {
namespace protobuf {
template<> ::GameMessage::LoginRequest* Arena::CreateMaybeMessage<::GameMessage::LoginRequest>(Arena*);
template<> ::GameMessage::LoginResponse* Arena::CreateMaybeMessage<::GameMessage::LoginResponse>(Arena*);
template<> ::GameMessage::LoginSubGameRequest* Arena::CreateMaybeMessage<::GameMessage::LoginSubGameRequest>(Arena*);
template<> ::GameMessage::LoginSubGameResponse* Arena::CreateMaybeMessage<::GameMessage::LoginSubGameResponse>(Arena*);
template<> ::GameMessage::QuitRequest* Arena::CreateMaybeMessage<::GameMessage::QuitRequest>(Arena*);
template<> ::GameMessage::QuitResponse* Arena::CreateMaybeMessage<::GameMessage::QuitResponse>(Arena*);
template<> ::GameMessage::QuitSubGameRequest* Arena::CreateMaybeMessage<::GameMessage::QuitSubGameRequest>(Arena*);
template<> ::GameMessage::QuitSubGameResponse* Arena::CreateMaybeMessage<::GameMessage::QuitSubGameResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace GameMessage {

enum LoginType {
  ACCOUNT = 0,
  LoginType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  LoginType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool LoginType_IsValid(int value);
const LoginType LoginType_MIN = ACCOUNT;
const LoginType LoginType_MAX = ACCOUNT;
const int LoginType_ARRAYSIZE = LoginType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginType_descriptor();
inline const ::std::string& LoginType_Name(LoginType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginType_descriptor(), value);
}
inline bool LoginType_Parse(
    const ::std::string& name, LoginType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginType>(
    LoginType_descriptor(), name, value);
}
// ===================================================================

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const final {
    return CreateMaybeMessage<LoginRequest>(NULL);
  }

  LoginRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 2;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string ip = 7;
  void clear_ip();
  static const int kIpFieldNumber = 7;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string version = 8;
  void clear_version();
  static const int kVersionFieldNumber = 8;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // .GameMessage.LoginType loginType = 4;
  void clear_logintype();
  static const int kLoginTypeFieldNumber = 4;
  ::GameMessage::LoginType logintype() const;
  void set_logintype(::GameMessage::LoginType value);

  // int64 sessionId = 5;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 5;
  ::google::protobuf::int64 sessionid() const;
  void set_sessionid(::google::protobuf::int64 value);

  // int32 gateId = 6;
  void clear_gateid();
  static const int kGateIdFieldNumber = 6;
  ::google::protobuf::int32 gateid() const;
  void set_gateid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.LoginRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::int32 msgid_;
  int logintype_;
  ::google::protobuf::int64 sessionid_;
  ::google::protobuf::int32 gateid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const final {
    return CreateMaybeMessage<LoginResponse>(NULL);
  }

  LoginResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // bool isOk = 2;
  void clear_isok();
  static const int kIsOkFieldNumber = 2;
  bool isok() const;
  void set_isok(bool value);

  // int64 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // int64 rid = 4;
  void clear_rid();
  static const int kRidFieldNumber = 4;
  ::google::protobuf::int64 rid() const;
  void set_rid(::google::protobuf::int64 value);

  // int64 sessionId = 5;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 5;
  ::google::protobuf::int64 sessionid() const;
  void set_sessionid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GameMessage.LoginResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 msgid_;
  bool isok_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int64 rid_;
  ::google::protobuf::int64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// -------------------------------------------------------------------

class QuitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.QuitRequest) */ {
 public:
  QuitRequest();
  virtual ~QuitRequest();

  QuitRequest(const QuitRequest& from);

  inline QuitRequest& operator=(const QuitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuitRequest(QuitRequest&& from) noexcept
    : QuitRequest() {
    *this = ::std::move(from);
  }

  inline QuitRequest& operator=(QuitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QuitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuitRequest* internal_default_instance() {
    return reinterpret_cast<const QuitRequest*>(
               &_QuitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(QuitRequest* other);
  friend void swap(QuitRequest& a, QuitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuitRequest* New() const final {
    return CreateMaybeMessage<QuitRequest>(NULL);
  }

  QuitRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuitRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuitRequest& from);
  void MergeFrom(const QuitRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 rid = 2;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int64 rid() const;
  void set_rid(::google::protobuf::int64 value);

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.QuitRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 rid_;
  ::google::protobuf::int32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// -------------------------------------------------------------------

class QuitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.QuitResponse) */ {
 public:
  QuitResponse();
  virtual ~QuitResponse();

  QuitResponse(const QuitResponse& from);

  inline QuitResponse& operator=(const QuitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuitResponse(QuitResponse&& from) noexcept
    : QuitResponse() {
    *this = ::std::move(from);
  }

  inline QuitResponse& operator=(QuitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QuitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuitResponse* internal_default_instance() {
    return reinterpret_cast<const QuitResponse*>(
               &_QuitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(QuitResponse* other);
  friend void swap(QuitResponse& a, QuitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuitResponse* New() const final {
    return CreateMaybeMessage<QuitResponse>(NULL);
  }

  QuitResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuitResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuitResponse& from);
  void MergeFrom(const QuitResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.QuitResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// -------------------------------------------------------------------

class LoginSubGameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.LoginSubGameRequest) */ {
 public:
  LoginSubGameRequest();
  virtual ~LoginSubGameRequest();

  LoginSubGameRequest(const LoginSubGameRequest& from);

  inline LoginSubGameRequest& operator=(const LoginSubGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginSubGameRequest(LoginSubGameRequest&& from) noexcept
    : LoginSubGameRequest() {
    *this = ::std::move(from);
  }

  inline LoginSubGameRequest& operator=(LoginSubGameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginSubGameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginSubGameRequest* internal_default_instance() {
    return reinterpret_cast<const LoginSubGameRequest*>(
               &_LoginSubGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(LoginSubGameRequest* other);
  friend void swap(LoginSubGameRequest& a, LoginSubGameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginSubGameRequest* New() const final {
    return CreateMaybeMessage<LoginSubGameRequest>(NULL);
  }

  LoginSubGameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginSubGameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginSubGameRequest& from);
  void MergeFrom(const LoginSubGameRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginSubGameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 rid = 2;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int64 rid() const;
  void set_rid(::google::protobuf::int64 value);

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 gameType = 4;
  void clear_gametype();
  static const int kGameTypeFieldNumber = 4;
  ::google::protobuf::int32 gametype() const;
  void set_gametype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.LoginSubGameRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 rid_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 gametype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// -------------------------------------------------------------------

class LoginSubGameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.LoginSubGameResponse) */ {
 public:
  LoginSubGameResponse();
  virtual ~LoginSubGameResponse();

  LoginSubGameResponse(const LoginSubGameResponse& from);

  inline LoginSubGameResponse& operator=(const LoginSubGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginSubGameResponse(LoginSubGameResponse&& from) noexcept
    : LoginSubGameResponse() {
    *this = ::std::move(from);
  }

  inline LoginSubGameResponse& operator=(LoginSubGameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginSubGameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginSubGameResponse* internal_default_instance() {
    return reinterpret_cast<const LoginSubGameResponse*>(
               &_LoginSubGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(LoginSubGameResponse* other);
  friend void swap(LoginSubGameResponse& a, LoginSubGameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginSubGameResponse* New() const final {
    return CreateMaybeMessage<LoginSubGameResponse>(NULL);
  }

  LoginSubGameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginSubGameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginSubGameResponse& from);
  void MergeFrom(const LoginSubGameResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginSubGameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.LoginSubGameResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// -------------------------------------------------------------------

class QuitSubGameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.QuitSubGameRequest) */ {
 public:
  QuitSubGameRequest();
  virtual ~QuitSubGameRequest();

  QuitSubGameRequest(const QuitSubGameRequest& from);

  inline QuitSubGameRequest& operator=(const QuitSubGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuitSubGameRequest(QuitSubGameRequest&& from) noexcept
    : QuitSubGameRequest() {
    *this = ::std::move(from);
  }

  inline QuitSubGameRequest& operator=(QuitSubGameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QuitSubGameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuitSubGameRequest* internal_default_instance() {
    return reinterpret_cast<const QuitSubGameRequest*>(
               &_QuitSubGameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(QuitSubGameRequest* other);
  friend void swap(QuitSubGameRequest& a, QuitSubGameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuitSubGameRequest* New() const final {
    return CreateMaybeMessage<QuitSubGameRequest>(NULL);
  }

  QuitSubGameRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuitSubGameRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuitSubGameRequest& from);
  void MergeFrom(const QuitSubGameRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuitSubGameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 rid = 2;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int64 rid() const;
  void set_rid(::google::protobuf::int64 value);

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.QuitSubGameRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 rid_;
  ::google::protobuf::int32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// -------------------------------------------------------------------

class QuitSubGameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.QuitSubGameResponse) */ {
 public:
  QuitSubGameResponse();
  virtual ~QuitSubGameResponse();

  QuitSubGameResponse(const QuitSubGameResponse& from);

  inline QuitSubGameResponse& operator=(const QuitSubGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuitSubGameResponse(QuitSubGameResponse&& from) noexcept
    : QuitSubGameResponse() {
    *this = ::std::move(from);
  }

  inline QuitSubGameResponse& operator=(QuitSubGameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const QuitSubGameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuitSubGameResponse* internal_default_instance() {
    return reinterpret_cast<const QuitSubGameResponse*>(
               &_QuitSubGameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(QuitSubGameResponse* other);
  friend void swap(QuitSubGameResponse& a, QuitSubGameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuitSubGameResponse* New() const final {
    return CreateMaybeMessage<QuitSubGameResponse>(NULL);
  }

  QuitSubGameResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuitSubGameResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuitSubGameResponse& from);
  void MergeFrom(const QuitSubGameResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuitSubGameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msgid() const;
  void set_msgid(::google::protobuf::int32 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.QuitSubGameResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 msgid_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_HallLoginMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRequest

// int32 msgId = 1;
inline void LoginRequest::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.msgId)
  return msgid_;
}
inline void LoginRequest::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.msgId)
}

// string account = 2;
inline void LoginRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::account() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.account)
  return account_.GetNoArena();
}
inline void LoginRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.account)
}
#if LANG_CXX11
inline void LoginRequest::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMessage.LoginRequest.account)
}
#endif
inline void LoginRequest::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMessage.LoginRequest.account)
}
inline void LoginRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMessage.LoginRequest.account)
}
inline ::std::string* LoginRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:GameMessage.LoginRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_account() {
  // @@protoc_insertion_point(field_release:GameMessage.LoginRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:GameMessage.LoginRequest.account)
}

// string password = 3;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMessage.LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMessage.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMessage.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:GameMessage.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:GameMessage.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:GameMessage.LoginRequest.password)
}

// .GameMessage.LoginType loginType = 4;
inline void LoginRequest::clear_logintype() {
  logintype_ = 0;
}
inline ::GameMessage::LoginType LoginRequest::logintype() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.loginType)
  return static_cast< ::GameMessage::LoginType >(logintype_);
}
inline void LoginRequest::set_logintype(::GameMessage::LoginType value) {
  
  logintype_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.loginType)
}

// int64 sessionId = 5;
inline void LoginRequest::clear_sessionid() {
  sessionid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 LoginRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.sessionId)
  return sessionid_;
}
inline void LoginRequest::set_sessionid(::google::protobuf::int64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.sessionId)
}

// int32 gateId = 6;
inline void LoginRequest::clear_gateid() {
  gateid_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::gateid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.gateId)
  return gateid_;
}
inline void LoginRequest::set_gateid(::google::protobuf::int32 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.gateId)
}

// string ip = 7;
inline void LoginRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::ip() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.ip)
  return ip_.GetNoArena();
}
inline void LoginRequest::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.ip)
}
#if LANG_CXX11
inline void LoginRequest::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMessage.LoginRequest.ip)
}
#endif
inline void LoginRequest::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMessage.LoginRequest.ip)
}
inline void LoginRequest::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMessage.LoginRequest.ip)
}
inline ::std::string* LoginRequest::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:GameMessage.LoginRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_ip() {
  // @@protoc_insertion_point(field_release:GameMessage.LoginRequest.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:GameMessage.LoginRequest.ip)
}

// string version = 8;
inline void LoginRequest::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::version() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginRequest.version)
  return version_.GetNoArena();
}
inline void LoginRequest::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMessage.LoginRequest.version)
}
#if LANG_CXX11
inline void LoginRequest::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMessage.LoginRequest.version)
}
#endif
inline void LoginRequest::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMessage.LoginRequest.version)
}
inline void LoginRequest::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMessage.LoginRequest.version)
}
inline ::std::string* LoginRequest::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:GameMessage.LoginRequest.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_version() {
  // @@protoc_insertion_point(field_release:GameMessage.LoginRequest.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:GameMessage.LoginRequest.version)
}

// -------------------------------------------------------------------

// LoginResponse

// int32 msgId = 1;
inline void LoginResponse::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 LoginResponse::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginResponse.msgId)
  return msgid_;
}
inline void LoginResponse::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginResponse.msgId)
}

// bool isOk = 2;
inline void LoginResponse::clear_isok() {
  isok_ = false;
}
inline bool LoginResponse::isok() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginResponse.isOk)
  return isok_;
}
inline void LoginResponse::set_isok(bool value) {
  
  isok_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginResponse.isOk)
}

// int64 uid = 3;
inline void LoginResponse::clear_uid() {
  uid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 LoginResponse::uid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginResponse.uid)
  return uid_;
}
inline void LoginResponse::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginResponse.uid)
}

// int64 rid = 4;
inline void LoginResponse::clear_rid() {
  rid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 LoginResponse::rid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginResponse.rid)
  return rid_;
}
inline void LoginResponse::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginResponse.rid)
}

// int64 sessionId = 5;
inline void LoginResponse::clear_sessionid() {
  sessionid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 LoginResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginResponse.sessionId)
  return sessionid_;
}
inline void LoginResponse::set_sessionid(::google::protobuf::int64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginResponse.sessionId)
}

// -------------------------------------------------------------------

// QuitRequest

// int32 msgId = 1;
inline void QuitRequest::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 QuitRequest::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitRequest.msgId)
  return msgid_;
}
inline void QuitRequest::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitRequest.msgId)
}

// int64 rid = 2;
inline void QuitRequest::clear_rid() {
  rid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 QuitRequest::rid() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitRequest.rid)
  return rid_;
}
inline void QuitRequest::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitRequest.rid)
}

// -------------------------------------------------------------------

// QuitResponse

// int32 msgId = 1;
inline void QuitResponse::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 QuitResponse::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitResponse.msgId)
  return msgid_;
}
inline void QuitResponse::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitResponse.msgId)
}

// int32 result = 2;
inline void QuitResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 QuitResponse::result() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitResponse.result)
  return result_;
}
inline void QuitResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitResponse.result)
}

// -------------------------------------------------------------------

// LoginSubGameRequest

// int32 msgId = 1;
inline void LoginSubGameRequest::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 LoginSubGameRequest::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginSubGameRequest.msgId)
  return msgid_;
}
inline void LoginSubGameRequest::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginSubGameRequest.msgId)
}

// int64 rid = 2;
inline void LoginSubGameRequest::clear_rid() {
  rid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 LoginSubGameRequest::rid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginSubGameRequest.rid)
  return rid_;
}
inline void LoginSubGameRequest::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginSubGameRequest.rid)
}

// int32 type = 3;
inline void LoginSubGameRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 LoginSubGameRequest::type() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginSubGameRequest.type)
  return type_;
}
inline void LoginSubGameRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginSubGameRequest.type)
}

// int32 gameType = 4;
inline void LoginSubGameRequest::clear_gametype() {
  gametype_ = 0;
}
inline ::google::protobuf::int32 LoginSubGameRequest::gametype() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginSubGameRequest.gameType)
  return gametype_;
}
inline void LoginSubGameRequest::set_gametype(::google::protobuf::int32 value) {
  
  gametype_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginSubGameRequest.gameType)
}

// -------------------------------------------------------------------

// LoginSubGameResponse

// int32 msgId = 1;
inline void LoginSubGameResponse::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 LoginSubGameResponse::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginSubGameResponse.msgId)
  return msgid_;
}
inline void LoginSubGameResponse::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginSubGameResponse.msgId)
}

// int32 result = 2;
inline void LoginSubGameResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 LoginSubGameResponse::result() const {
  // @@protoc_insertion_point(field_get:GameMessage.LoginSubGameResponse.result)
  return result_;
}
inline void LoginSubGameResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.LoginSubGameResponse.result)
}

// -------------------------------------------------------------------

// QuitSubGameRequest

// int32 msgId = 1;
inline void QuitSubGameRequest::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 QuitSubGameRequest::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitSubGameRequest.msgId)
  return msgid_;
}
inline void QuitSubGameRequest::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitSubGameRequest.msgId)
}

// int64 rid = 2;
inline void QuitSubGameRequest::clear_rid() {
  rid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 QuitSubGameRequest::rid() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitSubGameRequest.rid)
  return rid_;
}
inline void QuitSubGameRequest::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitSubGameRequest.rid)
}

// -------------------------------------------------------------------

// QuitSubGameResponse

// int32 msgId = 1;
inline void QuitSubGameResponse::clear_msgid() {
  msgid_ = 0;
}
inline ::google::protobuf::int32 QuitSubGameResponse::msgid() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitSubGameResponse.msgId)
  return msgid_;
}
inline void QuitSubGameResponse::set_msgid(::google::protobuf::int32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitSubGameResponse.msgId)
}

// int32 result = 2;
inline void QuitSubGameResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 QuitSubGameResponse::result() const {
  // @@protoc_insertion_point(field_get:GameMessage.QuitSubGameResponse.result)
  return result_;
}
inline void QuitSubGameResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.QuitSubGameResponse.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GameMessage

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::GameMessage::LoginType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMessage::LoginType>() {
  return ::GameMessage::LoginType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_HallLoginMessage_2eproto
