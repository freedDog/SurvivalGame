// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemMessage.proto

#ifndef PROTOBUF_INCLUDED_SystemMessage_2eproto
#define PROTOBUF_INCLUDED_SystemMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/stubs/common.h>
#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_SystemMessage_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_SystemMessage_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_SystemMessage_2eproto();
namespace GameMessage {
class HeartRequest;
class HeartRequestDefaultTypeInternal;
extern HeartRequestDefaultTypeInternal _HeartRequest_default_instance_;
class HeartResponse;
class HeartResponseDefaultTypeInternal;
extern HeartResponseDefaultTypeInternal _HeartResponse_default_instance_;
class SystemErrorResponse;
class SystemErrorResponseDefaultTypeInternal;
extern SystemErrorResponseDefaultTypeInternal _SystemErrorResponse_default_instance_;
class UdpConnectRequest;
class UdpConnectRequestDefaultTypeInternal;
extern UdpConnectRequestDefaultTypeInternal _UdpConnectRequest_default_instance_;
class UdpConnectResponse;
class UdpConnectResponseDefaultTypeInternal;
extern UdpConnectResponseDefaultTypeInternal _UdpConnectResponse_default_instance_;
}  // namespace GameMessage
namespace google {
namespace protobuf {
template<> ::GameMessage::HeartRequest* Arena::CreateMaybeMessage<::GameMessage::HeartRequest>(Arena*);
template<> ::GameMessage::HeartResponse* Arena::CreateMaybeMessage<::GameMessage::HeartResponse>(Arena*);
template<> ::GameMessage::SystemErrorResponse* Arena::CreateMaybeMessage<::GameMessage::SystemErrorResponse>(Arena*);
template<> ::GameMessage::UdpConnectRequest* Arena::CreateMaybeMessage<::GameMessage::UdpConnectRequest>(Arena*);
template<> ::GameMessage::UdpConnectResponse* Arena::CreateMaybeMessage<::GameMessage::UdpConnectResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace GameMessage {

enum SystemErrorCode {
  HallNotFind = 0,
  GameNotFind = 1,
  ConectReset = 2,
  SystemErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  SystemErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool SystemErrorCode_IsValid(int value);
const SystemErrorCode SystemErrorCode_MIN = HallNotFind;
const SystemErrorCode SystemErrorCode_MAX = ConectReset;
const int SystemErrorCode_ARRAYSIZE = SystemErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemErrorCode_descriptor();
inline const ::std::string& SystemErrorCode_Name(SystemErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemErrorCode_descriptor(), value);
}
inline bool SystemErrorCode_Parse(
    const ::std::string& name, SystemErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemErrorCode>(
    SystemErrorCode_descriptor(), name, value);
}
// ===================================================================

class SystemErrorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.SystemErrorResponse) */ {
 public:
  SystemErrorResponse();
  virtual ~SystemErrorResponse();

  SystemErrorResponse(const SystemErrorResponse& from);

  inline SystemErrorResponse& operator=(const SystemErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemErrorResponse(SystemErrorResponse&& from) noexcept
    : SystemErrorResponse() {
    *this = ::std::move(from);
  }

  inline SystemErrorResponse& operator=(SystemErrorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SystemErrorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemErrorResponse* internal_default_instance() {
    return reinterpret_cast<const SystemErrorResponse*>(
               &_SystemErrorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SystemErrorResponse* other);
  friend void swap(SystemErrorResponse& a, SystemErrorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemErrorResponse* New() const final {
    return CreateMaybeMessage<SystemErrorResponse>(NULL);
  }

  SystemErrorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SystemErrorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SystemErrorResponse& from);
  void MergeFrom(const SystemErrorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemErrorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // .GameMessage.SystemErrorCode errorCode = 2;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  ::GameMessage::SystemErrorCode errorcode() const;
  void set_errorcode(::GameMessage::SystemErrorCode value);

  // @@protoc_insertion_point(class_scope:GameMessage.SystemErrorResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 mid_;
  int errorcode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SystemMessage_2eproto;
};
// -------------------------------------------------------------------

class HeartRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.HeartRequest) */ {
 public:
  HeartRequest();
  virtual ~HeartRequest();

  HeartRequest(const HeartRequest& from);

  inline HeartRequest& operator=(const HeartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartRequest(HeartRequest&& from) noexcept
    : HeartRequest() {
    *this = ::std::move(from);
  }

  inline HeartRequest& operator=(HeartRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HeartRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartRequest* internal_default_instance() {
    return reinterpret_cast<const HeartRequest*>(
               &_HeartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HeartRequest* other);
  friend void swap(HeartRequest& a, HeartRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartRequest* New() const final {
    return CreateMaybeMessage<HeartRequest>(NULL);
  }

  HeartRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartRequest& from);
  void MergeFrom(const HeartRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.HeartRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SystemMessage_2eproto;
};
// -------------------------------------------------------------------

class HeartResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.HeartResponse) */ {
 public:
  HeartResponse();
  virtual ~HeartResponse();

  HeartResponse(const HeartResponse& from);

  inline HeartResponse& operator=(const HeartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartResponse(HeartResponse&& from) noexcept
    : HeartResponse() {
    *this = ::std::move(from);
  }

  inline HeartResponse& operator=(HeartResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HeartResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartResponse* internal_default_instance() {
    return reinterpret_cast<const HeartResponse*>(
               &_HeartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HeartResponse* other);
  friend void swap(HeartResponse& a, HeartResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartResponse* New() const final {
    return CreateMaybeMessage<HeartResponse>(NULL);
  }

  HeartResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartResponse& from);
  void MergeFrom(const HeartResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 serverTime = 2;
  void clear_servertime();
  static const int kServerTimeFieldNumber = 2;
  ::google::protobuf::int64 servertime() const;
  void set_servertime(::google::protobuf::int64 value);

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.HeartResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 servertime_;
  ::google::protobuf::int32 mid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SystemMessage_2eproto;
};
// -------------------------------------------------------------------

class UdpConnectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.UdpConnectRequest) */ {
 public:
  UdpConnectRequest();
  virtual ~UdpConnectRequest();

  UdpConnectRequest(const UdpConnectRequest& from);

  inline UdpConnectRequest& operator=(const UdpConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UdpConnectRequest(UdpConnectRequest&& from) noexcept
    : UdpConnectRequest() {
    *this = ::std::move(from);
  }

  inline UdpConnectRequest& operator=(UdpConnectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UdpConnectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UdpConnectRequest* internal_default_instance() {
    return reinterpret_cast<const UdpConnectRequest*>(
               &_UdpConnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(UdpConnectRequest* other);
  friend void swap(UdpConnectRequest& a, UdpConnectRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UdpConnectRequest* New() const final {
    return CreateMaybeMessage<UdpConnectRequest>(NULL);
  }

  UdpConnectRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UdpConnectRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UdpConnectRequest& from);
  void MergeFrom(const UdpConnectRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UdpConnectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 sessionId = 2;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::int64 sessionid() const;
  void set_sessionid(::google::protobuf::int64 value);

  // int64 rid = 3;
  void clear_rid();
  static const int kRidFieldNumber = 3;
  ::google::protobuf::int64 rid() const;
  void set_rid(::google::protobuf::int64 value);

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.UdpConnectRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 sessionid_;
  ::google::protobuf::int64 rid_;
  ::google::protobuf::int32 mid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SystemMessage_2eproto;
};
// -------------------------------------------------------------------

class UdpConnectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage.UdpConnectResponse) */ {
 public:
  UdpConnectResponse();
  virtual ~UdpConnectResponse();

  UdpConnectResponse(const UdpConnectResponse& from);

  inline UdpConnectResponse& operator=(const UdpConnectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UdpConnectResponse(UdpConnectResponse&& from) noexcept
    : UdpConnectResponse() {
    *this = ::std::move(from);
  }

  inline UdpConnectResponse& operator=(UdpConnectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UdpConnectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UdpConnectResponse* internal_default_instance() {
    return reinterpret_cast<const UdpConnectResponse*>(
               &_UdpConnectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UdpConnectResponse* other);
  friend void swap(UdpConnectResponse& a, UdpConnectResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UdpConnectResponse* New() const final {
    return CreateMaybeMessage<UdpConnectResponse>(NULL);
  }

  UdpConnectResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UdpConnectResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UdpConnectResponse& from);
  void MergeFrom(const UdpConnectResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UdpConnectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mid = 1;
  void clear_mid();
  static const int kMidFieldNumber = 1;
  ::google::protobuf::int32 mid() const;
  void set_mid(::google::protobuf::int32 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.UdpConnectResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mid_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SystemMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SystemErrorResponse

// int32 mid = 1;
inline void SystemErrorResponse::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 SystemErrorResponse::mid() const {
  // @@protoc_insertion_point(field_get:GameMessage.SystemErrorResponse.mid)
  return mid_;
}
inline void SystemErrorResponse::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.SystemErrorResponse.mid)
}

// .GameMessage.SystemErrorCode errorCode = 2;
inline void SystemErrorResponse::clear_errorcode() {
  errorcode_ = 0;
}
inline ::GameMessage::SystemErrorCode SystemErrorResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:GameMessage.SystemErrorResponse.errorCode)
  return static_cast< ::GameMessage::SystemErrorCode >(errorcode_);
}
inline void SystemErrorResponse::set_errorcode(::GameMessage::SystemErrorCode value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.SystemErrorResponse.errorCode)
}

// bytes msg = 3;
inline void SystemErrorResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemErrorResponse::msg() const {
  // @@protoc_insertion_point(field_get:GameMessage.SystemErrorResponse.msg)
  return msg_.GetNoArena();
}
inline void SystemErrorResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMessage.SystemErrorResponse.msg)
}
#if LANG_CXX11
inline void SystemErrorResponse::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMessage.SystemErrorResponse.msg)
}
#endif
inline void SystemErrorResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMessage.SystemErrorResponse.msg)
}
inline void SystemErrorResponse::set_msg(const void* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMessage.SystemErrorResponse.msg)
}
inline ::std::string* SystemErrorResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:GameMessage.SystemErrorResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemErrorResponse::release_msg() {
  // @@protoc_insertion_point(field_release:GameMessage.SystemErrorResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemErrorResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:GameMessage.SystemErrorResponse.msg)
}

// -------------------------------------------------------------------

// HeartRequest

// int32 mid = 1;
inline void HeartRequest::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 HeartRequest::mid() const {
  // @@protoc_insertion_point(field_get:GameMessage.HeartRequest.mid)
  return mid_;
}
inline void HeartRequest::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.HeartRequest.mid)
}

// -------------------------------------------------------------------

// HeartResponse

// int32 mid = 1;
inline void HeartResponse::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 HeartResponse::mid() const {
  // @@protoc_insertion_point(field_get:GameMessage.HeartResponse.mid)
  return mid_;
}
inline void HeartResponse::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.HeartResponse.mid)
}

// int64 serverTime = 2;
inline void HeartResponse::clear_servertime() {
  servertime_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 HeartResponse::servertime() const {
  // @@protoc_insertion_point(field_get:GameMessage.HeartResponse.serverTime)
  return servertime_;
}
inline void HeartResponse::set_servertime(::google::protobuf::int64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.HeartResponse.serverTime)
}

// -------------------------------------------------------------------

// UdpConnectRequest

// int32 mid = 1;
inline void UdpConnectRequest::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 UdpConnectRequest::mid() const {
  // @@protoc_insertion_point(field_get:GameMessage.UdpConnectRequest.mid)
  return mid_;
}
inline void UdpConnectRequest::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.UdpConnectRequest.mid)
}

// int64 sessionId = 2;
inline void UdpConnectRequest::clear_sessionid() {
  sessionid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 UdpConnectRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:GameMessage.UdpConnectRequest.sessionId)
  return sessionid_;
}
inline void UdpConnectRequest::set_sessionid(::google::protobuf::int64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.UdpConnectRequest.sessionId)
}

// int64 rid = 3;
inline void UdpConnectRequest::clear_rid() {
  rid_ = GOOGLE_PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 UdpConnectRequest::rid() const {
  // @@protoc_insertion_point(field_get:GameMessage.UdpConnectRequest.rid)
  return rid_;
}
inline void UdpConnectRequest::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.UdpConnectRequest.rid)
}

// -------------------------------------------------------------------

// UdpConnectResponse

// int32 mid = 1;
inline void UdpConnectResponse::clear_mid() {
  mid_ = 0;
}
inline ::google::protobuf::int32 UdpConnectResponse::mid() const {
  // @@protoc_insertion_point(field_get:GameMessage.UdpConnectResponse.mid)
  return mid_;
}
inline void UdpConnectResponse::set_mid(::google::protobuf::int32 value) {
  
  mid_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.UdpConnectResponse.mid)
}

// int32 result = 2;
inline void UdpConnectResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UdpConnectResponse::result() const {
  // @@protoc_insertion_point(field_get:GameMessage.UdpConnectResponse.result)
  return result_;
}
inline void UdpConnectResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.UdpConnectResponse.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GameMessage

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::GameMessage::SystemErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMessage::SystemErrorCode>() {
  return ::GameMessage::SystemErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_SystemMessage_2eproto
