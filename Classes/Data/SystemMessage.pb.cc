// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemMessage.proto

#include "SystemMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace GameMessage {
class SystemErrorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemErrorResponse> _instance;
} _SystemErrorResponse_default_instance_;
class HeartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartRequest> _instance;
} _HeartRequest_default_instance_;
class HeartResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartResponse> _instance;
} _HeartResponse_default_instance_;
class UdpConnectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UdpConnectRequest> _instance;
} _UdpConnectRequest_default_instance_;
class UdpConnectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UdpConnectResponse> _instance;
} _UdpConnectResponse_default_instance_;
}  // namespace GameMessage
static void InitDefaultsSystemErrorResponse_SystemMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMessage::_SystemErrorResponse_default_instance_;
    new (ptr) ::GameMessage::SystemErrorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::SystemErrorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemErrorResponse_SystemMessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemErrorResponse_SystemMessage_2eproto}, {}};

static void InitDefaultsHeartRequest_SystemMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMessage::_HeartRequest_default_instance_;
    new (ptr) ::GameMessage::HeartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::HeartRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartRequest_SystemMessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartRequest_SystemMessage_2eproto}, {}};

static void InitDefaultsHeartResponse_SystemMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMessage::_HeartResponse_default_instance_;
    new (ptr) ::GameMessage::HeartResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::HeartResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartResponse_SystemMessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartResponse_SystemMessage_2eproto}, {}};

static void InitDefaultsUdpConnectRequest_SystemMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMessage::_UdpConnectRequest_default_instance_;
    new (ptr) ::GameMessage::UdpConnectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::UdpConnectRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UdpConnectRequest_SystemMessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUdpConnectRequest_SystemMessage_2eproto}, {}};

static void InitDefaultsUdpConnectResponse_SystemMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GameMessage::_UdpConnectResponse_default_instance_;
    new (ptr) ::GameMessage::UdpConnectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::UdpConnectResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UdpConnectResponse_SystemMessage_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUdpConnectResponse_SystemMessage_2eproto}, {}};

void InitDefaults_SystemMessage_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SystemErrorResponse_SystemMessage_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartRequest_SystemMessage_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartResponse_SystemMessage_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UdpConnectRequest_SystemMessage_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UdpConnectResponse_SystemMessage_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_SystemMessage_2eproto[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_SystemMessage_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_SystemMessage_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_SystemMessage_2eproto::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::SystemErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::SystemErrorResponse, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::SystemErrorResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::SystemErrorResponse, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::HeartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::HeartRequest, mid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::HeartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::HeartResponse, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::HeartResponse, servertime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::UdpConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::UdpConnectRequest, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::UdpConnectRequest, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::UdpConnectRequest, rid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::UdpConnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::UdpConnectResponse, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage::UdpConnectResponse, result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GameMessage::SystemErrorResponse)},
  { 8, -1, sizeof(::GameMessage::HeartRequest)},
  { 14, -1, sizeof(::GameMessage::HeartResponse)},
  { 21, -1, sizeof(::GameMessage::UdpConnectRequest)},
  { 29, -1, sizeof(::GameMessage::UdpConnectResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMessage::_SystemErrorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMessage::_HeartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMessage::_HeartResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMessage::_UdpConnectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::GameMessage::_UdpConnectResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_SystemMessage_2eproto = {
  {}, AddDescriptors_SystemMessage_2eproto, "SystemMessage.proto", schemas,
  file_default_instances, TableStruct_SystemMessage_2eproto::offsets,
  file_level_metadata_SystemMessage_2eproto, 5, file_level_enum_descriptors_SystemMessage_2eproto, file_level_service_descriptors_SystemMessage_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_SystemMessage_2eproto = {
  false, InitDefaults_SystemMessage_2eproto, 
  "\n\023SystemMessage.proto\022\013GameMessage\"`\n\023Sy"
  "stemErrorResponse\022\013\n\003mid\030\001 \001(\005\022/\n\terrorC"
  "ode\030\002 \001(\0162\034.GameMessage.SystemErrorCode\022"
  "\013\n\003msg\030\003 \001(\014\"\033\n\014HeartRequest\022\013\n\003mid\030\001 \001("
  "\005\"0\n\rHeartResponse\022\013\n\003mid\030\001 \001(\005\022\022\n\nserve"
  "rTime\030\002 \001(\003\"@\n\021UdpConnectRequest\022\013\n\003mid\030"
  "\001 \001(\005\022\021\n\tsessionId\030\002 \001(\003\022\013\n\003rid\030\003 \001(\003\"1\n"
  "\022UdpConnectResponse\022\013\n\003mid\030\001 \001(\005\022\016\n\006resu"
  "lt\030\002 \001(\005*D\n\017SystemErrorCode\022\017\n\013HallNotFi"
  "nd\020\000\022\017\n\013GameNotFind\020\001\022\017\n\013ConectReset\020\002b\006"
  "proto3"
,
  "SystemMessage.proto", &assign_descriptors_table_SystemMessage_2eproto, 406,
};

void AddDescriptors_SystemMessage_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_SystemMessage_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_SystemMessage_2eproto = []() { AddDescriptors_SystemMessage_2eproto(); return true; }();
namespace GameMessage {
const ::google::protobuf::EnumDescriptor* SystemErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_SystemMessage_2eproto);
  return file_level_enum_descriptors_SystemMessage_2eproto[0];
}
bool SystemErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SystemErrorResponse::InitAsDefaultInstance() {
}
class SystemErrorResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemErrorResponse::kMidFieldNumber;
const int SystemErrorResponse::kErrorCodeFieldNumber;
const int SystemErrorResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemErrorResponse::SystemErrorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage.SystemErrorResponse)
}
SystemErrorResponse::SystemErrorResponse(const SystemErrorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&mid_, &from.mid_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&mid_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:GameMessage.SystemErrorResponse)
}

void SystemErrorResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SystemErrorResponse_SystemMessage_2eproto.base);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&mid_)) + sizeof(errorcode_));
}

SystemErrorResponse::~SystemErrorResponse() {
  // @@protoc_insertion_point(destructor:GameMessage.SystemErrorResponse)
  SharedDtor();
}

void SystemErrorResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemErrorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemErrorResponse& SystemErrorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SystemErrorResponse_SystemMessage_2eproto.base);
  return *internal_default_instance();
}


void SystemErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage.SystemErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&mid_)) + sizeof(errorcode_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SystemErrorResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SystemErrorResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int32 mid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // .GameMessage.SystemErrorCode errorCode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::GameMessage::SystemErrorCode value = static_cast<::GameMessage::SystemErrorCode>(val);
        msg->set_errorcode(value);
        break;
      }
      // bytes msg = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::google::protobuf::internal::StringParser;
        ::std::string* str = msg->mutable_msg();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SystemErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage.SystemErrorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GameMessage.SystemErrorCode errorCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errorcode(static_cast< ::GameMessage::SystemErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage.SystemErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage.SystemErrorResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SystemErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage.SystemErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mid(), output);
  }

  // .GameMessage.SystemErrorCode errorCode = 2;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errorcode(), output);
  }

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage.SystemErrorResponse)
}

::google::protobuf::uint8* SystemErrorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage.SystemErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mid(), target);
  }

  // .GameMessage.SystemErrorCode errorCode = 2;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->errorcode(), target);
  }

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage.SystemErrorResponse)
  return target;
}

size_t SystemErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage.SystemErrorResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // int32 mid = 1;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // .GameMessage.SystemErrorCode errorCode = 2;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errorcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage.SystemErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemErrorResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SystemErrorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage.SystemErrorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage.SystemErrorResponse)
    MergeFrom(*source);
  }
}

void SystemErrorResponse::MergeFrom(const SystemErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage.SystemErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void SystemErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage.SystemErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemErrorResponse::CopyFrom(const SystemErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage.SystemErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemErrorResponse::IsInitialized() const {
  return true;
}

void SystemErrorResponse::Swap(SystemErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemErrorResponse::InternalSwap(SystemErrorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mid_, other->mid_);
  swap(errorcode_, other->errorcode_);
}

::google::protobuf::Metadata SystemErrorResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMessage_2eproto);
  return ::file_level_metadata_SystemMessage_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HeartRequest::InitAsDefaultInstance() {
}
class HeartRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartRequest::kMidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartRequest::HeartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage.HeartRequest)
}
HeartRequest::HeartRequest(const HeartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mid_ = from.mid_;
  // @@protoc_insertion_point(copy_constructor:GameMessage.HeartRequest)
}

void HeartRequest::SharedCtor() {
  mid_ = 0;
}

HeartRequest::~HeartRequest() {
  // @@protoc_insertion_point(destructor:GameMessage.HeartRequest)
  SharedDtor();
}

void HeartRequest::SharedDtor() {
}

void HeartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartRequest& HeartRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HeartRequest_SystemMessage_2eproto.base);
  return *internal_default_instance();
}


void HeartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage.HeartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HeartRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HeartRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int32 mid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HeartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage.HeartRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage.HeartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage.HeartRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HeartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage.HeartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage.HeartRequest)
}

::google::protobuf::uint8* HeartRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage.HeartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage.HeartRequest)
  return target;
}

size_t HeartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage.HeartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage.HeartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartRequest* source =
      ::google::protobuf::DynamicCastToGenerated<HeartRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage.HeartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage.HeartRequest)
    MergeFrom(*source);
  }
}

void HeartRequest::MergeFrom(const HeartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage.HeartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mid() != 0) {
    set_mid(from.mid());
  }
}

void HeartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage.HeartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartRequest::CopyFrom(const HeartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage.HeartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartRequest::IsInitialized() const {
  return true;
}

void HeartRequest::Swap(HeartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartRequest::InternalSwap(HeartRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mid_, other->mid_);
}

::google::protobuf::Metadata HeartRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMessage_2eproto);
  return ::file_level_metadata_SystemMessage_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HeartResponse::InitAsDefaultInstance() {
}
class HeartResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartResponse::kMidFieldNumber;
const int HeartResponse::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartResponse::HeartResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage.HeartResponse)
}
HeartResponse::HeartResponse(const HeartResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&servertime_, &from.servertime_,
    static_cast<size_t>(reinterpret_cast<char*>(&mid_) -
    reinterpret_cast<char*>(&servertime_)) + sizeof(mid_));
  // @@protoc_insertion_point(copy_constructor:GameMessage.HeartResponse)
}

void HeartResponse::SharedCtor() {
  ::memset(&servertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mid_) -
      reinterpret_cast<char*>(&servertime_)) + sizeof(mid_));
}

HeartResponse::~HeartResponse() {
  // @@protoc_insertion_point(destructor:GameMessage.HeartResponse)
  SharedDtor();
}

void HeartResponse::SharedDtor() {
}

void HeartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartResponse& HeartResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HeartResponse_SystemMessage_2eproto.base);
  return *internal_default_instance();
}


void HeartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage.HeartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&servertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mid_) -
      reinterpret_cast<char*>(&servertime_)) + sizeof(mid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HeartResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HeartResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int32 mid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int64 serverTime = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int64 value = val;
        msg->set_servertime(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HeartResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage.HeartResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 serverTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage.HeartResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage.HeartResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HeartResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage.HeartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mid(), output);
  }

  // int64 serverTime = 2;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->servertime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage.HeartResponse)
}

::google::protobuf::uint8* HeartResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage.HeartResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mid(), target);
  }

  // int64 serverTime = 2;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->servertime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage.HeartResponse)
  return target;
}

size_t HeartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage.HeartResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 serverTime = 2;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->servertime());
  }

  // int32 mid = 1;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage.HeartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartResponse* source =
      ::google::protobuf::DynamicCastToGenerated<HeartResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage.HeartResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage.HeartResponse)
    MergeFrom(*source);
  }
}

void HeartResponse::MergeFrom(const HeartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage.HeartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
}

void HeartResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage.HeartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartResponse::CopyFrom(const HeartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage.HeartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartResponse::IsInitialized() const {
  return true;
}

void HeartResponse::Swap(HeartResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartResponse::InternalSwap(HeartResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(servertime_, other->servertime_);
  swap(mid_, other->mid_);
}

::google::protobuf::Metadata HeartResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMessage_2eproto);
  return ::file_level_metadata_SystemMessage_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UdpConnectRequest::InitAsDefaultInstance() {
}
class UdpConnectRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UdpConnectRequest::kMidFieldNumber;
const int UdpConnectRequest::kSessionIdFieldNumber;
const int UdpConnectRequest::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UdpConnectRequest::UdpConnectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage.UdpConnectRequest)
}
UdpConnectRequest::UdpConnectRequest(const UdpConnectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sessionid_, &from.sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mid_) -
    reinterpret_cast<char*>(&sessionid_)) + sizeof(mid_));
  // @@protoc_insertion_point(copy_constructor:GameMessage.UdpConnectRequest)
}

void UdpConnectRequest::SharedCtor() {
  ::memset(&sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mid_) -
      reinterpret_cast<char*>(&sessionid_)) + sizeof(mid_));
}

UdpConnectRequest::~UdpConnectRequest() {
  // @@protoc_insertion_point(destructor:GameMessage.UdpConnectRequest)
  SharedDtor();
}

void UdpConnectRequest::SharedDtor() {
}

void UdpConnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UdpConnectRequest& UdpConnectRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UdpConnectRequest_SystemMessage_2eproto.base);
  return *internal_default_instance();
}


void UdpConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage.UdpConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mid_) -
      reinterpret_cast<char*>(&sessionid_)) + sizeof(mid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UdpConnectRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UdpConnectRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int32 mid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int64 sessionId = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int64 value = val;
        msg->set_sessionid(value);
        break;
      }
      // int64 rid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int64 value = val;
        msg->set_rid(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UdpConnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage.UdpConnectRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 sessionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage.UdpConnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage.UdpConnectRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UdpConnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage.UdpConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mid(), output);
  }

  // int64 sessionId = 2;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sessionid(), output);
  }

  // int64 rid = 3;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->rid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage.UdpConnectRequest)
}

::google::protobuf::uint8* UdpConnectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage.UdpConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mid(), target);
  }

  // int64 sessionId = 2;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sessionid(), target);
  }

  // int64 rid = 3;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->rid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage.UdpConnectRequest)
  return target;
}

size_t UdpConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage.UdpConnectRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 sessionId = 2;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sessionid());
  }

  // int64 rid = 3;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rid());
  }

  // int32 mid = 1;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UdpConnectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage.UdpConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UdpConnectRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UdpConnectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage.UdpConnectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage.UdpConnectRequest)
    MergeFrom(*source);
  }
}

void UdpConnectRequest::MergeFrom(const UdpConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage.UdpConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.mid() != 0) {
    set_mid(from.mid());
  }
}

void UdpConnectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage.UdpConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UdpConnectRequest::CopyFrom(const UdpConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage.UdpConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UdpConnectRequest::IsInitialized() const {
  return true;
}

void UdpConnectRequest::Swap(UdpConnectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UdpConnectRequest::InternalSwap(UdpConnectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sessionid_, other->sessionid_);
  swap(rid_, other->rid_);
  swap(mid_, other->mid_);
}

::google::protobuf::Metadata UdpConnectRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMessage_2eproto);
  return ::file_level_metadata_SystemMessage_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UdpConnectResponse::InitAsDefaultInstance() {
}
class UdpConnectResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UdpConnectResponse::kMidFieldNumber;
const int UdpConnectResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UdpConnectResponse::UdpConnectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage.UdpConnectResponse)
}
UdpConnectResponse::UdpConnectResponse(const UdpConnectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mid_, &from.mid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:GameMessage.UdpConnectResponse)
}

void UdpConnectResponse::SharedCtor() {
  ::memset(&mid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&mid_)) + sizeof(result_));
}

UdpConnectResponse::~UdpConnectResponse() {
  // @@protoc_insertion_point(destructor:GameMessage.UdpConnectResponse)
  SharedDtor();
}

void UdpConnectResponse::SharedDtor() {
}

void UdpConnectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UdpConnectResponse& UdpConnectResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UdpConnectResponse_SystemMessage_2eproto.base);
  return *internal_default_instance();
}


void UdpConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage.UdpConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&mid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UdpConnectResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UdpConnectResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // int32 mid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_mid(value);
        break;
      }
      // int32 result = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_result(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UdpConnectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage.UdpConnectResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage.UdpConnectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage.UdpConnectResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UdpConnectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage.UdpConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mid(), output);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage.UdpConnectResponse)
}

::google::protobuf::uint8* UdpConnectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage.UdpConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mid(), target);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage.UdpConnectResponse)
  return target;
}

size_t UdpConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage.UdpConnectResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 mid = 1;
  if (this->mid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mid());
  }

  // int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UdpConnectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage.UdpConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UdpConnectResponse* source =
      ::google::protobuf::DynamicCastToGenerated<UdpConnectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage.UdpConnectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage.UdpConnectResponse)
    MergeFrom(*source);
  }
}

void UdpConnectResponse::MergeFrom(const UdpConnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage.UdpConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mid() != 0) {
    set_mid(from.mid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void UdpConnectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage.UdpConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UdpConnectResponse::CopyFrom(const UdpConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage.UdpConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UdpConnectResponse::IsInitialized() const {
  return true;
}

void UdpConnectResponse::Swap(UdpConnectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UdpConnectResponse::InternalSwap(UdpConnectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mid_, other->mid_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata UdpConnectResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_SystemMessage_2eproto);
  return ::file_level_metadata_SystemMessage_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace GameMessage
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMessage::SystemErrorResponse* Arena::CreateMaybeMessage< ::GameMessage::SystemErrorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GameMessage::SystemErrorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMessage::HeartRequest* Arena::CreateMaybeMessage< ::GameMessage::HeartRequest >(Arena* arena) {
  return Arena::CreateInternal< ::GameMessage::HeartRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMessage::HeartResponse* Arena::CreateMaybeMessage< ::GameMessage::HeartResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GameMessage::HeartResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMessage::UdpConnectRequest* Arena::CreateMaybeMessage< ::GameMessage::UdpConnectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::GameMessage::UdpConnectRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::GameMessage::UdpConnectResponse* Arena::CreateMaybeMessage< ::GameMessage::UdpConnectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::GameMessage::UdpConnectResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
