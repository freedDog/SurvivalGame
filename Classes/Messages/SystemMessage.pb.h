// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemMessage.proto

#ifndef PROTOBUF_SystemMessage_2eproto__INCLUDED
#define PROTOBUF_SystemMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Mid.pb.h"
// @@protoc_insertion_point(includes)

namespace PlatPmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SystemMessage_2eproto();
void protobuf_AssignDesc_SystemMessage_2eproto();
void protobuf_ShutdownFile_SystemMessage_2eproto();

class SystemErrorResponse;
class HeartRequest;
class HeartResponse;
class UdpConnectRequest;
class UdpConnectResponse;

enum SystemErrorCode {
  HallNotFind = 1,
  GameNotFind = 2,
  ConectReset = 3
};
bool SystemErrorCode_IsValid(int value);
const SystemErrorCode SystemErrorCode_MIN = HallNotFind;
const SystemErrorCode SystemErrorCode_MAX = ConectReset;
const int SystemErrorCode_ARRAYSIZE = SystemErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemErrorCode_descriptor();
inline const ::std::string& SystemErrorCode_Name(SystemErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemErrorCode_descriptor(), value);
}
inline bool SystemErrorCode_Parse(
    const ::std::string& name, SystemErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemErrorCode>(
    SystemErrorCode_descriptor(), name, value);
}
// ===================================================================

class SystemErrorResponse : public ::google::protobuf::Message {
 public:
  SystemErrorResponse();
  virtual ~SystemErrorResponse();

  SystemErrorResponse(const SystemErrorResponse& from);

  inline SystemErrorResponse& operator=(const SystemErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemErrorResponse& default_instance();

  void Swap(SystemErrorResponse* other);

  // implements Message ----------------------------------------------

  SystemErrorResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemErrorResponse& from);
  void MergeFrom(const SystemErrorResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PlatPmd.MID mid = 1 [default = SystemErrorRes];
  inline bool has_mid() const;
  inline void clear_mid();
  static const int kMidFieldNumber = 1;
  inline ::PlatPmd::MID mid() const;
  inline void set_mid(::PlatPmd::MID value);

  // optional .PlatPmd.SystemErrorCode errorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::PlatPmd::SystemErrorCode errorcode() const;
  inline void set_errorcode(::PlatPmd::SystemErrorCode value);

  // optional string msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:PlatPmd.SystemErrorResponse)
 private:
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int mid_;
  int errorcode_;
  ::std::string* msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SystemMessage_2eproto();
  friend void protobuf_AssignDesc_SystemMessage_2eproto();
  friend void protobuf_ShutdownFile_SystemMessage_2eproto();

  void InitAsDefaultInstance();
  static SystemErrorResponse* default_instance_;
};
// -------------------------------------------------------------------

class HeartRequest : public ::google::protobuf::Message {
 public:
  HeartRequest();
  virtual ~HeartRequest();

  HeartRequest(const HeartRequest& from);

  inline HeartRequest& operator=(const HeartRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartRequest& default_instance();

  void Swap(HeartRequest* other);

  // implements Message ----------------------------------------------

  HeartRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartRequest& from);
  void MergeFrom(const HeartRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PlatPmd.MID mid = 1 [default = HeartReq];
  inline bool has_mid() const;
  inline void clear_mid();
  static const int kMidFieldNumber = 1;
  inline ::PlatPmd::MID mid() const;
  inline void set_mid(::PlatPmd::MID value);

  // @@protoc_insertion_point(class_scope:PlatPmd.HeartRequest)
 private:
  inline void set_has_mid();
  inline void clear_has_mid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int mid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SystemMessage_2eproto();
  friend void protobuf_AssignDesc_SystemMessage_2eproto();
  friend void protobuf_ShutdownFile_SystemMessage_2eproto();

  void InitAsDefaultInstance();
  static HeartRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartResponse : public ::google::protobuf::Message {
 public:
  HeartResponse();
  virtual ~HeartResponse();

  HeartResponse(const HeartResponse& from);

  inline HeartResponse& operator=(const HeartResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartResponse& default_instance();

  void Swap(HeartResponse* other);

  // implements Message ----------------------------------------------

  HeartResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartResponse& from);
  void MergeFrom(const HeartResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PlatPmd.MID mid = 1 [default = HeartRes];
  inline bool has_mid() const;
  inline void clear_mid();
  static const int kMidFieldNumber = 1;
  inline ::PlatPmd::MID mid() const;
  inline void set_mid(::PlatPmd::MID value);

  // optional int64 serverTime = 2;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServerTimeFieldNumber = 2;
  inline ::google::protobuf::int64 servertime() const;
  inline void set_servertime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PlatPmd.HeartResponse)
 private:
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_servertime();
  inline void clear_has_servertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 servertime_;
  int mid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SystemMessage_2eproto();
  friend void protobuf_AssignDesc_SystemMessage_2eproto();
  friend void protobuf_ShutdownFile_SystemMessage_2eproto();

  void InitAsDefaultInstance();
  static HeartResponse* default_instance_;
};
// -------------------------------------------------------------------

class UdpConnectRequest : public ::google::protobuf::Message {
 public:
  UdpConnectRequest();
  virtual ~UdpConnectRequest();

  UdpConnectRequest(const UdpConnectRequest& from);

  inline UdpConnectRequest& operator=(const UdpConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UdpConnectRequest& default_instance();

  void Swap(UdpConnectRequest* other);

  // implements Message ----------------------------------------------

  UdpConnectRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UdpConnectRequest& from);
  void MergeFrom(const UdpConnectRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PlatPmd.MID mid = 1 [default = UdpConnectReq];
  inline bool has_mid() const;
  inline void clear_mid();
  static const int kMidFieldNumber = 1;
  inline ::PlatPmd::MID mid() const;
  inline void set_mid(::PlatPmd::MID value);

  // optional int64 sessionId = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::int64 sessionid() const;
  inline void set_sessionid(::google::protobuf::int64 value);

  // optional int64 rid = 3;
  inline bool has_rid() const;
  inline void clear_rid();
  static const int kRidFieldNumber = 3;
  inline ::google::protobuf::int64 rid() const;
  inline void set_rid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PlatPmd.UdpConnectRequest)
 private:
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_rid();
  inline void clear_has_rid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 sessionid_;
  ::google::protobuf::int64 rid_;
  int mid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_SystemMessage_2eproto();
  friend void protobuf_AssignDesc_SystemMessage_2eproto();
  friend void protobuf_ShutdownFile_SystemMessage_2eproto();

  void InitAsDefaultInstance();
  static UdpConnectRequest* default_instance_;
};
// -------------------------------------------------------------------

class UdpConnectResponse : public ::google::protobuf::Message {
 public:
  UdpConnectResponse();
  virtual ~UdpConnectResponse();

  UdpConnectResponse(const UdpConnectResponse& from);

  inline UdpConnectResponse& operator=(const UdpConnectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UdpConnectResponse& default_instance();

  void Swap(UdpConnectResponse* other);

  // implements Message ----------------------------------------------

  UdpConnectResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UdpConnectResponse& from);
  void MergeFrom(const UdpConnectResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PlatPmd.MID mid = 1 [default = UdpConnectRes];
  inline bool has_mid() const;
  inline void clear_mid();
  static const int kMidFieldNumber = 1;
  inline ::PlatPmd::MID mid() const;
  inline void set_mid(::PlatPmd::MID value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlatPmd.UdpConnectResponse)
 private:
  inline void set_has_mid();
  inline void clear_has_mid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int mid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SystemMessage_2eproto();
  friend void protobuf_AssignDesc_SystemMessage_2eproto();
  friend void protobuf_ShutdownFile_SystemMessage_2eproto();

  void InitAsDefaultInstance();
  static UdpConnectResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SystemErrorResponse

// optional .PlatPmd.MID mid = 1 [default = SystemErrorRes];
inline bool SystemErrorResponse::has_mid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemErrorResponse::set_has_mid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemErrorResponse::clear_has_mid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemErrorResponse::clear_mid() {
  mid_ = 10006;
  clear_has_mid();
}
inline ::PlatPmd::MID SystemErrorResponse::mid() const {
  return static_cast< ::PlatPmd::MID >(mid_);
}
inline void SystemErrorResponse::set_mid(::PlatPmd::MID value) {
  assert(::PlatPmd::MID_IsValid(value));
  set_has_mid();
  mid_ = value;
}

// optional .PlatPmd.SystemErrorCode errorCode = 2;
inline bool SystemErrorResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemErrorResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemErrorResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemErrorResponse::clear_errorcode() {
  errorcode_ = 1;
  clear_has_errorcode();
}
inline ::PlatPmd::SystemErrorCode SystemErrorResponse::errorcode() const {
  return static_cast< ::PlatPmd::SystemErrorCode >(errorcode_);
}
inline void SystemErrorResponse::set_errorcode(::PlatPmd::SystemErrorCode value) {
  assert(::PlatPmd::SystemErrorCode_IsValid(value));
  set_has_errorcode();
  errorcode_ = value;
}

// optional string msg = 3;
inline bool SystemErrorResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemErrorResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SystemErrorResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SystemErrorResponse::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& SystemErrorResponse::msg() const {
  return *msg_;
}
inline void SystemErrorResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SystemErrorResponse::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SystemErrorResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SystemErrorResponse::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* SystemErrorResponse::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SystemErrorResponse::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HeartRequest

// optional .PlatPmd.MID mid = 1 [default = HeartReq];
inline bool HeartRequest::has_mid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartRequest::set_has_mid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartRequest::clear_has_mid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartRequest::clear_mid() {
  mid_ = 10011;
  clear_has_mid();
}
inline ::PlatPmd::MID HeartRequest::mid() const {
  return static_cast< ::PlatPmd::MID >(mid_);
}
inline void HeartRequest::set_mid(::PlatPmd::MID value) {
  assert(::PlatPmd::MID_IsValid(value));
  set_has_mid();
  mid_ = value;
}

// -------------------------------------------------------------------

// HeartResponse

// optional .PlatPmd.MID mid = 1 [default = HeartRes];
inline bool HeartResponse::has_mid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartResponse::set_has_mid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartResponse::clear_has_mid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartResponse::clear_mid() {
  mid_ = 10012;
  clear_has_mid();
}
inline ::PlatPmd::MID HeartResponse::mid() const {
  return static_cast< ::PlatPmd::MID >(mid_);
}
inline void HeartResponse::set_mid(::PlatPmd::MID value) {
  assert(::PlatPmd::MID_IsValid(value));
  set_has_mid();
  mid_ = value;
}

// optional int64 serverTime = 2;
inline bool HeartResponse::has_servertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartResponse::set_has_servertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartResponse::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartResponse::clear_servertime() {
  servertime_ = GOOGLE_LONGLONG(0);
  clear_has_servertime();
}
inline ::google::protobuf::int64 HeartResponse::servertime() const {
  return servertime_;
}
inline void HeartResponse::set_servertime(::google::protobuf::int64 value) {
  set_has_servertime();
  servertime_ = value;
}

// -------------------------------------------------------------------

// UdpConnectRequest

// optional .PlatPmd.MID mid = 1 [default = UdpConnectReq];
inline bool UdpConnectRequest::has_mid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UdpConnectRequest::set_has_mid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UdpConnectRequest::clear_has_mid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UdpConnectRequest::clear_mid() {
  mid_ = 10013;
  clear_has_mid();
}
inline ::PlatPmd::MID UdpConnectRequest::mid() const {
  return static_cast< ::PlatPmd::MID >(mid_);
}
inline void UdpConnectRequest::set_mid(::PlatPmd::MID value) {
  assert(::PlatPmd::MID_IsValid(value));
  set_has_mid();
  mid_ = value;
}

// optional int64 sessionId = 2;
inline bool UdpConnectRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UdpConnectRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UdpConnectRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UdpConnectRequest::clear_sessionid() {
  sessionid_ = GOOGLE_LONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::int64 UdpConnectRequest::sessionid() const {
  return sessionid_;
}
inline void UdpConnectRequest::set_sessionid(::google::protobuf::int64 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// optional int64 rid = 3;
inline bool UdpConnectRequest::has_rid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UdpConnectRequest::set_has_rid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UdpConnectRequest::clear_has_rid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UdpConnectRequest::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
  clear_has_rid();
}
inline ::google::protobuf::int64 UdpConnectRequest::rid() const {
  return rid_;
}
inline void UdpConnectRequest::set_rid(::google::protobuf::int64 value) {
  set_has_rid();
  rid_ = value;
}

// -------------------------------------------------------------------

// UdpConnectResponse

// optional .PlatPmd.MID mid = 1 [default = UdpConnectRes];
inline bool UdpConnectResponse::has_mid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UdpConnectResponse::set_has_mid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UdpConnectResponse::clear_has_mid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UdpConnectResponse::clear_mid() {
  mid_ = 10014;
  clear_has_mid();
}
inline ::PlatPmd::MID UdpConnectResponse::mid() const {
  return static_cast< ::PlatPmd::MID >(mid_);
}
inline void UdpConnectResponse::set_mid(::PlatPmd::MID value) {
  assert(::PlatPmd::MID_IsValid(value));
  set_has_mid();
  mid_ = value;
}

// optional int32 result = 2;
inline bool UdpConnectResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UdpConnectResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UdpConnectResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UdpConnectResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 UdpConnectResponse::result() const {
  return result_;
}
inline void UdpConnectResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PlatPmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlatPmd::SystemErrorCode>() {
  return ::PlatPmd::SystemErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SystemMessage_2eproto__INCLUDED
